{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","target","rel","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","submitWasPressed","onChange","event","name","value","setState","createMovieCard","newMovie","props","onAdd","this","onSubmit","preventDefault","type","classNames","showInputError","placeholder","required","onClick","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8f7fb01.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a\n          href={imdbUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    submitWasPressed: false,\n  };\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  createMovieCard = () => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (\n      title !== ''\n      && imgUrl !== ''\n      && imdbUrl !== ''\n      && imdbId !== ''\n    ) {\n      const newMovie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      this.props.onAdd(newMovie);\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        submitWasPressed: false,\n      });\n    } else {\n      this.setState({\n        submitWasPressed: true,\n      });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      submitWasPressed,\n    } = this.state;\n\n    return (\n      <form\n        className=\"new-movie\"\n        onSubmit={event => event.preventDefault()}\n      >\n        <label\n          className=\"new-movie__title-label\"\n        >\n          Enter title:\n          <input\n            type=\"text\"\n            name=\"title\"\n            className={\n              classNames(\n                'new-movie__title input',\n                { showInputError: !title && submitWasPressed },\n              )\n            }\n            placeholder=\"Enter title\"\n            value={title}\n            onChange={this.onChange}\n            required\n          />\n        </label>\n        <span\n          className={\n                classNames(\n                  (!title && submitWasPressed)\n                    ? 'showError'\n                    : 'hideError',\n                )\n              }\n        >\n          Please, enter the title.\n        </span>\n\n        <label\n          className=\"new-movie__description-label\"\n        >\n          Enter description:\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            className=\"new-movie__description input\"\n            placeholder=\"Enter description\"\n            value={description}\n            onChange={this.onChange}\n          />\n        </label>\n        <label\n          className=\"new-movie__imgUrl-label\"\n        >\n          Enter image url address:\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            className={\n              classNames(\n                'new-movie__imgUrl input',\n                { showInputError: !imgUrl && submitWasPressed },\n              )\n            }\n            placeholder=\"Enter imgUrl\"\n            value={imgUrl}\n            onChange={this.onChange}\n            required\n          />\n        </label>\n        <span\n          className={\n                classNames(\n                  (!imgUrl && submitWasPressed)\n                    ? 'showError'\n                    : 'hideError',\n                )\n              }\n        >\n          Please, enter the title.\n        </span>\n\n        <label\n          className=\"new-movie__imdbUrl-label\"\n        >\n          Enter url address from imdb:\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            className={\n              classNames(\n                'new-movie__imdbUrl input',\n                { showInputError: !imdbUrl && submitWasPressed },\n              )\n            }\n            placeholder=\"Enter imdbUrl\"\n            value={imdbUrl}\n            onChange={this.onChange}\n            required\n          />\n        </label>\n        <span\n          className={\n                classNames(\n                  (!imdbUrl && submitWasPressed)\n                    ? 'showError'\n                    : 'hideError',\n                )\n              }\n        >\n          Please, enter the title.\n        </span>\n\n        <label\n          className=\"new-movie__imdbId-label\"\n        >\n          Enter imdbId address from imdb:\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            className={\n              classNames(\n                'new-movie__imdbId input',\n                { showInputError: !imdbId && submitWasPressed },\n              )\n            }\n            placeholder=\"Enter imdbId\"\n            value={imdbId}\n            onChange={this.onChange}\n            required\n          />\n        </label>\n        <span\n          className={\n            classNames(\n              (!imdbId && submitWasPressed)\n                ? 'showError'\n                : 'hideError',\n            )\n          }\n        >\n          Please, enter the title.\n        </span>\n        <button\n          type=\"button\"\n          className=\"new-movie__submit-button\"\n          onClick={this.createMovieCard}\n        >\n          Add new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}